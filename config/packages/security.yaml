security:
    password_hashers:
        App\Entity\User:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

        api_users:
            memory:
                users:
                    admin:
                        password: '897645hriuherh8974234'
                        roles: [ ROLE_API_USER ]

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            lazy: true
            provider: app_user_provider
            custom_authenticators:
                - App\Security\UserAuthenticator
            form_login:
                login_path: !php/const App\Routing\Routes::INDEX
                check_path: !php/const App\Routing\Routes::INDEX
                username_parameter: 'email'
                password_parameter: 'password'
            logout:
                path: !php/const App\Routing\Routes::LOGOUT
                target: !php/const App\Routing\Routes::INDEX # where to redirect after logout
            switch_user: true
        api:
            provider: api_users
            http_basic:
                realm: Authenticated Area

    role_hierarchy:
        ROLE_ADMIN: [ ROLE_USER ]
        ROLE_API_USER: [ ROLE_USER ]

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin, allow_if: "is_granted('ROLE_ADMIN')" }
        - { path: ^/api, role: ROLE_API_USER }
        - { path: ^/$, role: PUBLIC_ACCESS }
        - { path: ^/, role: ROLE_USER }

when@test:
    security:
        password_hashers:
            App\Entity\User: plaintext
