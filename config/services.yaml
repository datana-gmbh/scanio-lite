# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.
parameters:
    documents_dir: '%kernel.project_dir%/public/documents'

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            string $appSecret: '%env(APP_SECRET)%'
            string $platformShBranch: '%env(PLATFORM_BRANCH)%'
            string $projectDir: '%kernel.project_dir%'
            string $documentsDir: '%documents_dir%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    # https://symfony.com/doc/current/components/uid.html#generating-and-inspecting-uuids-ulids-in-the-console
    Symfony\Component\Uid\Command\GenerateUlidCommand: ~
    Symfony\Component\Uid\Command\InspectUlidCommand: ~

    Knp\Menu\Matcher\Matcher:
        arguments:
            - { 0: '@App\Tree\Voter\UrlPathVoter' }

    Knp\Menu\Matcher\MatcherInterface: '@Knp\Menu\Matcher\Matcher'

    app.main_menu:
        class: Knp\Menu\MenuItem
        factory: [ '@App\Tree\KnpMenuBuilder', build ]
        arguments: [ "@request_stack" ]
        tags:
            - { name: knp_menu.menu, alias: main }

    App\ValueResolver\:
        resource: '../src/ValueResolver/'
        tags:
            - { name: controller.argument_value_resolver, priority: 150 }

    App\Storage\FilenameGeneratorInterface: '@App\Storage\UniqueFilenameGenerator'

when@test:
    services:
        App\Storage\UploadedFileWriter:
            autowire: true
            public: true

        App\Storage\FilenameGeneratorInterface: '@App\Storage\SameFilenameGenerator'
