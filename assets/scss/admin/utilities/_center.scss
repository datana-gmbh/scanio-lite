// Center elements horizontally and/or vertically
//
// Option 1: Flexbox-Version
//
// Use this as your centering standard, it's simple and slim.
//
// Sample input:
// .element-1 {
//   @include flex-center(horizontal);
// }
//
// .element-2 {
//   @include flex-center(vertical);
// }
//
// .element-3 {
//   @include flex-center;
// }
//
// Sample output:
// .element-1 {
//   display: flex;
//   justify-content: center;
// }
//
// .element-2 {
//   display: flex;
//   align-items: center;
// }
//
// .element-3 {
//   display: flex;
//   justify-content: center;
//   align-items: center;
// }

@mixin flex-center($scope: null) {
  display: flex;

  @if $scope == horizontal {
    justify-content: center;
  }

  @else if $scope == vertical {
    align-items: center;
  }

  @else {
    justify-content: center;
    align-items: center;
  }
}

// Option 2: Translate-Version
//
// Alternative in case you can't use 'display: flex' on the container element
// e.g. because the display property is set by a script.
//
// Sample input:
// .parent {
//   position: relative;
// }
//
// .child-1 {
//   @include trans-center(horizontal);
// }
//
// .child-2 {
//   @include trans-center(vertical);
// }
//
// .child-3 {
//   @include trans-center;
// }
//
// Sample output:
// .parent {
//   position: relative;
// }
//
// .child-1 {
//   position: absolute;
//   left: 50%;
//   transform: translateX(-50%);
// }
//
// .child-2 {
//   position: absolute;
//   top: 50%;
//   transform: translateY(-50%);
// }
//
// .child-3 {
//   position: absolute;
//   top: 50%;
//   left: 50%;
//   transform: translate(-50%, -50%);
// }

@mixin trans-center($scope: null) {
  position: absolute;

  @if $scope == horizontal {
    left: 50%;
    transform: translateX(-50%);
  }

  @else if $scope == vertical {
    top: 50%;
    transform: translateY(-50%);
  }

  @else {
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }
}
